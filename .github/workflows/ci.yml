name: CI/CD Pipeline

on:
  push:

jobs:
  test:
    name: Test on Python Versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Run unit tests
        run: poetry run pytest

  analysis:
    name: Code Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Ruff (Linting)
        run: |
          pip install ruff
          ruff check .

  release:
    name: Release on Tag
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [test, analysis]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Build Project
        run: poetry build

      - name: "Generate changelog"
        uses: janheinrichmerker/action-github-changelog-generator@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }} 
          output: CHANGELOG.md

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: dist/*
          bodyFile: CHANGELOG.md

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/

  docs:
    name: Publish Documentation
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          pip install poetry
          poetry install
          poetry run sphinx-build -b html docs/source docs/build/

      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: gh-pages
          build_dir: docs/build/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
